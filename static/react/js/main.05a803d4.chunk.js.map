{"version":3,"sources":["components/upload.js","login.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["Upload","onFileChangeHandler","e","preventDefault","setState","selectedFile","target","files","formData","FormData","append","state","fetch","method","body","then","res","ok","console","log","data","alert","className","type","name","onChange","this","file","action","enctype","Component","CLIENT_ID","GoogleBtn","props","isLogined","accessToken","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","clientId","buttonText","onLogoutSuccess","onFailure","onSuccess","cookiePolicy","responseType","Routes","exact","from","to","path","browserHistory","createBrowserHistory","App","history","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAuDeA,E,4MAtCbC,oBAAsB,SAACC,GACjBA,EAAEC,iBACF,EAAKC,SAAS,CACVC,aAAcH,EAAEI,OAAOC,MAAM,KAEjC,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ,EAAKC,MAAMN,cACnCO,MAAM,yBAA0B,CAC5BC,OAAQ,OACRC,KAAMN,IACPO,MAAK,SAAAC,GACDA,EAAIC,KACHC,QAAQC,IAAIH,EAAII,MAChBC,MAAM,oC,4CAIpB,WACE,OACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,WAAf,UACQ,sBAAKA,UAAU,yBAAf,UACI,sDACA,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,KAAK,OAAOC,SAAUC,KAAKzB,sBACvE,uBAAOsB,KAAK,OAAOD,UAAU,eAAeE,KAAK,OAAOC,SAAU,WAvC9F,IAAoBE,EAClBf,MAAM,YAAa,CAEjBC,OAAQ,OACRC,KAAMa,IACLZ,MAAK,SAAAC,GACKA,EAAIC,KACHC,QAAQC,IAAIH,EAAII,MAChBC,MAAM,yCAiCE,uBAAMO,OAAS,iCAAiCf,OAAS,OAAOgB,QAAU,sBAA1E,UACI,uBAAON,KAAO,OAAOC,KAAO,SAC5B,uBAAOD,KAAO,yB,GA9BrBO,aCXfC,EAAY,2EA0EHC,E,kDAtEZ,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEDtB,MAAQ,CACXuB,WAAW,EACXC,YAAa,IAGf,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,gBAXT,E,yCAcpB,SAAOI,GACFA,EAASN,aACVT,KAAKtB,UAAS,SAAAO,GAAK,MAAK,CACtBuB,WAAW,EACXC,YAAaM,EAASN,kB,oBAK5B,SAAQM,GACNf,KAAKtB,UAAS,SAAAO,GAAK,MAAK,CACtBuB,WAAW,EACXC,YAAa,S,gCAIjB,SAAoBM,GAClBpB,MAAM,sB,iCAGR,SAAqBoB,GACnBpB,MAAM,uB,oBAGR,WACE,OACA,8BACIK,KAAKf,MAAMuB,UACX,gCACA,cAAC,EAAD,IACE,cAAC,eAAD,CACEQ,SAAWX,EACXY,WAAW,SACXC,gBAAkBlB,KAAKa,OACvBM,UAAYnB,KAAKc,yBAKrB,gCACA,cAAC,EAAD,IACA,cAAC,cAAD,CACEE,SAAWX,EACXY,WAAW,QACXG,UAAYpB,KAAKU,MACjBS,UAAYnB,KAAKY,mBACjBS,aAAe,qBACfC,aAAa,wB,GA9DClB,aCkBTmB,G,YAnBA,WACb,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,IACLC,GAAG,UAEL,cAAC,EAAD,CACEC,KAAK,UAEP,cAAC,EAAD,CACEA,KAAK,YAEP,cAAC,IAAD,CAAUD,GAAG,oBCjBbE,EAAiBC,cAEFC,E,4JACnB,WACE,OACI,cAAC,IAAD,CAAeC,QAASH,EAAxB,SACE,cAAC,EAAD,U,GAJuBxB,aCMlB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"js/main.05a803d4.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\nimport GoogleLogout from 'react-google-login';\r\n\r\nfunction uploadFile(file) {\r\n  fetch('/uploader', {\r\n    // content-type header should not be specified!\r\n    method: 'POST',\r\n    body: file,\r\n  }).then(res => {\r\n            if(res.ok) {\r\n                console.log(res.data);\r\n                alert(\"File uploaded successfully.\")\r\n            }\r\n        });\r\n}\r\n\r\nclass Upload extends Component{\r\n  onFileChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            selectedFile: e.target.files[0]\r\n        });\r\n        const formData = new FormData();\r\n        formData.append('file', this.state.selectedFile);\r\n        fetch('http://127.0.0.1:5000/', {\r\n            method: 'post',\r\n            body: formData\r\n        }).then(res => {\r\n            if(res.ok) {\r\n                console.log(res.data);\r\n                alert(\"File uploaded successfully.\")\r\n            }\r\n        });\r\n    };\r\n  render(){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                        <div className=\"form-group files color\">\r\n                            <label>Upload Your File </label>\r\n                            <input type=\"file\" className=\"form-control\" name=\"file\" onChange={this.onFileChangeHandler}/>\r\n                            <input type=\"file\" className=\"form-control\" name=\"file\" onChange={() => uploadFile()}/>\r\n                        </div>\r\n                        <form action = \"http://localhost:5000/uploader\" method = \"POST\" enctype = \"multipart/form-data\">\r\n                            <input type = \"file\" name = \"file\" />\r\n                            <input type = \"submit\"/>\r\n                        </form>  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Upload;","import React, { Component } from 'react'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport Upload from './components/upload.js'\n\n\nconst CLIENT_ID = '485536728289-35ogud03f4i54k38lu8gihdcqdnrgiiq.apps.googleusercontent.com';\n\n\nclass GoogleBtn extends Component {\n   constructor(props) {\n    super(props);\n\n    this.state = {\n      isLogined: false,\n      accessToken: ''\n    };\n\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login (response) {\n    if(response.accessToken){\n      this.setState(state => ({\n        isLogined: true,\n        accessToken: response.accessToken\n      }));\n    }\n  }\n\n  logout (response) {\n    this.setState(state => ({\n      isLogined: false,\n      accessToken: ''\n    }));\n  }\n\n  handleLoginFailure (response) {\n    alert('Failed to log in')\n  }\n\n  handleLogoutFailure (response) {\n    alert('Failed to log out')\n  }\n\n  render() {\n    return (\n    <div>\n      { this.state.isLogined ?\n        <div>\n        <Upload />\n          <GoogleLogout\n            clientId={ CLIENT_ID }\n            buttonText='Logout'\n            onLogoutSuccess={ this.logout }\n            onFailure={ this.handleLogoutFailure }\n          >\n          </GoogleLogout>\n        </div>\n        :\n        <div>\n        <Upload />\n        <GoogleLogin\n          clientId={ CLIENT_ID }\n          buttonText='Login'\n          onSuccess={ this.login }\n          onFailure={ this.handleLoginFailure }\n          cookiePolicy={ 'single_host_origin' }\n          responseType='code,token'\n        />\n        </div>\n      }\n    </div>\n    )\n  }\n}\n\nexport default GoogleBtn;","import React from 'react';\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\nimport Login from './login.js';\r\n//import DashboardApp from './login.js'\r\nimport { useHistory } from 'react-router-dom'; \r\nimport RouterComponent from './RouterComponent/RouterComponent';\r\nimport Upload from './components/upload.js'\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Redirect\r\n        exact\r\n        from=\"/\"\r\n        to=\"/home\"\r\n      />\r\n      <Login \r\n        path=\"/home\"\r\n      />\r\n      <Upload \r\n        path=\"/upload\"\r\n      />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;","import React, {Component} from \"react\";\r\nimport { Router,BrowserRouter } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport Routes from './routes';\r\nconst browserHistory = createBrowserHistory();\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n        <BrowserRouter history={browserHistory}>\r\n          <Routes />\r\n        </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}